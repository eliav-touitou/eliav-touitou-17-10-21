{"version":3,"sources":["actions/index.js","components/CitySection.js","components/DailyForecast.js","components/Forecast.js","utils.js","components/SearchBox.js","components/Home.js","components/SavedCity.js","components/Favorites.js","App.js","reportWebVitals.js","reducers/cityReducer.js","reducers/favoritesReducer.js","reducers/forecastReducer.js","reducers/weatherReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","index.js"],"names":["setCity","obj","type","payload","removeFromFavorites","num","addData","setError","bool","CitySection","city","useSelector","state","weather","dispatch","useDispatch","className","onClick","isSaved","key","label","id","Date","toString","split","splice","join","degrees","DailyForecast","day","forecast","min","max","map","i","apiKey","citySearchAutocomplete","str","a","query","axios","get","response","data","cities","forEach","cityObj","LocalizedName","Country","Key","push","getCityWeather","baseUrl","Temperature","Metric","Value","Math","round","getDayByDate","date","fullDate","weekday","Array","getDay","convertToCelsius","far","getCityForecast","DailyForecasts","dailyForecasts","dayObj","Maximum","Minimum","dayState","Day","IconPhrase","nightState","Night","SearchBox","useState","citiesOption","setCitiesOption","search","setSearch","useEffect","then","res","catch","err","Autocomplete","onChange","event","value","searchCity","disablePortal","options","sx","width","renderInput","params","TextField","e","target","Home","SavedCity","setWeather","exact","to","Favorites","favorites","savedCity","App","errorExisting","toast","cityKey","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","cityReducer","action","favoritesReducer","filter","item","forecastReducer","weatherReducer","errorReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b17311a1.chunk.js","sourcesContent":["export const setCity = (obj) => {\r\n  return {\r\n    type: \"SET_CITY\",\r\n    payload: obj,\r\n  };\r\n};\r\nexport const addToFavorites = (obj) => {\r\n  return {\r\n    type: \"ADD_TO_FAVORITES\",\r\n    payload: obj,\r\n  };\r\n};\r\nexport const removeFromFavorites = (num) => {\r\n  return {\r\n    type: \"REMOVE_FROM_FAVORITES\",\r\n    payload: num,\r\n  };\r\n};\r\nexport const addData = (obj) => {\r\n  return {\r\n    type: \"ADD_DATA\",\r\n    payload: obj,\r\n  };\r\n};\r\nexport const setWeather = (obj) => {\r\n  return {\r\n    type: \"SET_WEATHER\",\r\n    payload: obj,\r\n  };\r\n};\r\nexport const setForecast = (obj) => {\r\n  return {\r\n    type: \"SET_FORECAST\",\r\n    payload: obj,\r\n  };\r\n};\r\nexport const setError = (bool) => {\r\n  return {\r\n    type: \"SET_ERROR\",\r\n    payload: bool,\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addData, addToFavorites, removeFromFavorites } from \"../actions\";\r\n\r\nexport default function CitySection() {\r\n  //states\r\n  const city = useSelector((state) => state.city);\r\n  const weather = useSelector((state) => state.weather);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFavorites = () => {\r\n    if (city.isSaved) {\r\n      dispatch(removeFromFavorites(city.key));\r\n      dispatch(addData({ isSaved: false }));\r\n    } else {\r\n      dispatch(addToFavorites({ label: city.label, key: city.key }));\r\n      dispatch(addData({ isSaved: true }));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"weather-side\">\r\n      <div className=\"weather-gradient\" />\r\n      <button\r\n        onClick={() => handleFavorites()}\r\n        className=\"location-button\"\r\n        id=\"save-btn\"\r\n      >\r\n        <span>{city.isSaved === true ? \"remove from favorites\" : \"like!\"}</span>\r\n      </button>\r\n      <div className=\"date-container\">\r\n        <h2 className=\"date-dayname\">{city.label}</h2>\r\n        <span className=\"date-day\">\r\n          {new Date().toString().split(\" \").splice(1, 3).join(\" \")}\r\n        </span>\r\n      </div>\r\n      <div className=\"weather-container\">\r\n        <h1 className=\"weather-temp\">{weather.degrees}°C</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function DailyForecast({ day }) {\r\n  return (\r\n    <li className=\"active\">\r\n      <span className=\"day-name\">{day.day}</span>\r\n      <span className=\"day-temp\">\r\n        {day.forecast.min}°C - {day.forecast.max}°C\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DailyForecast from \"./DailyForecast\";\r\n\r\nexport default function CitySection() {\r\n  //states\r\n  const forecast = useSelector((state) => state.forecast);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"week-container\">\r\n        <ul className=\"week-list\">\r\n          {forecast.forecast?.map((day, i) => (\r\n            <DailyForecast key={`day-${i}`} day={day} />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nconst apiKey = \"9iA7RFd8k5ScAExvnewAYoKuNGh7Kuy3\";\r\n\r\nexport const citySearchAutocomplete = async (str) => {\r\n  const baseUrl =\r\n    \"http://dataservice.accuweather.com/locations/v1/cities/autocomplete\";\r\n  const query = `?apikey=${apiKey}&q=${str}`;\r\n  try {\r\n    const response = await axios.get(baseUrl + query);\r\n    const data = response.data;\r\n    // return (data);\r\n    const cities = [];\r\n    if (data) {\r\n      data?.forEach((city) => {\r\n        const cityObj = {};\r\n        cityObj.label = city.LocalizedName + \" / \" + city.Country.LocalizedName;\r\n        cityObj.key = city.Key;\r\n        cities.push(cityObj);\r\n      });\r\n    }\r\n    return cities;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\nexport const getCityKey = async (city) => {\r\n  const baseUrl =\r\n    \"http://dataservice.accuweather.com/locations/v1/cities/search\";\r\n  const query = `?apikey=${apiKey}&q=${city}`;\r\n  try {\r\n    const data = await axios.get(baseUrl + query);\r\n    const response = data.data[0];\r\n    const cityKey = response.Key;\r\n    return cityKey;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getCityWeather = async (key) => {\r\n  const baseUrl = `http://dataservice.accuweather.com/currentconditions/v1/${key}`;\r\n  const query = `?apikey=${apiKey}`;\r\n  try {\r\n    const response = await axios.get(baseUrl + query);\r\n    const data = response.data[0].Temperature.Metric.Value;\r\n    const weather = Math.round(data);\r\n    return weather;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nconst getDayByDate = (date) => {\r\n  const fullDate = new Date(date);\r\n  const weekday = new Array(7);\r\n  weekday[0] = \"Sunday\";\r\n  weekday[1] = \"Monday\";\r\n  weekday[2] = \"Tuesday\";\r\n  weekday[3] = \"Wednesday\";\r\n  weekday[4] = \"Thursday\";\r\n  weekday[5] = \"Friday\";\r\n  weekday[6] = \"Saturday\";\r\n\r\n  const dayOfWeek = weekday[fullDate.getDay()];\r\n  return dayOfWeek;\r\n};\r\n\r\nconst convertToCelsius = (far) => {\r\n  const celsius = Math.round(((far - 32) * 5) / 9);\r\n  return celsius;\r\n};\r\n\r\nexport const getCityForecast = async (key) => {\r\n  const baseUrl = `http://dataservice.accuweather.com/forecasts/v1/daily/5day/${key}`;\r\n  const query = `?apikey=${apiKey}`;\r\n  try {\r\n    const response = await axios.get(baseUrl + query);\r\n    const dailyForecasts = await response.data.DailyForecasts;\r\n    let forecast = [];\r\n\r\n    dailyForecasts.forEach((day) => {\r\n      const dayObj = {};\r\n      dayObj.day = getDayByDate(day.Date);\r\n      dayObj.forecast = {\r\n        max: convertToCelsius(day.Temperature.Maximum.Value),\r\n        min: convertToCelsius(day.Temperature.Minimum.Value),\r\n        dayState: day.Day.IconPhrase,\r\n        nightState: day.Night.IconPhrase,\r\n      };\r\n      forecast.push(dayObj);\r\n    });\r\n\r\n    return forecast;\r\n    // return data;\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { citySearchAutocomplete } from \"../utils\";\r\nimport { setCity, setError } from \"../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function SearchBox() {\r\n  const [citiesOption, setCitiesOption] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    citySearchAutocomplete(search)\r\n      .then((res) => {\r\n        if (res) {\r\n          setCitiesOption(res);\r\n        }\r\n      })\r\n      .catch((err) => dispatch(setError(err)));\r\n  }, [search]);\r\n\r\n  const searchCity = (value) => {\r\n    if (value) {\r\n      dispatch(setCity(value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Autocomplete\r\n        onChange={(event, value) => searchCity(value)}\r\n        disablePortal\r\n        id=\"combo-box-demo\"\r\n        options={citiesOption}\r\n        sx={{ width: 300 }}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            id=\"textField\"\r\n            {...params}\r\n            label=\"City\"\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CitySection from \"./CitySection\";\r\nimport Forecast from \"./Forecast\";\r\nimport SearchBox from \"./SearchBox\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <CitySection />\r\n      <div className=\"info-side\">\r\n        <div className=\"today-info-container\">\r\n          <div className=\"today-info\">\r\n            <SearchBox />\r\n          </div>\r\n        </div>\r\n        <Forecast />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { removeFromFavorites, addData, setCity } from \"../actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCityWeather } from \"../utils\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SavedCity({ city }) {\r\n  const dispatch = useDispatch();\r\n  const [weather, setWeather] = useState(15);\r\n\r\n  useEffect(() => {\r\n    getCityWeather(city.key)\r\n      .then((res) => setWeather(res))\r\n      .catch((err) => setWeather(\"-\"));\r\n  }, []);\r\n\r\n  const remove = () => {\r\n    dispatch(removeFromFavorites(city.key));\r\n    dispatch(addData({ isSaved: false }));\r\n  };\r\n\r\n  return (\r\n    <li className=\"active\">\r\n      <Link\r\n        exact\r\n        to=\"/\"\r\n        onClick={() => dispatch(setCity({ ...city, isSaved: true }))}\r\n      >\r\n        <span className=\"day-name\">{city.label}</span>\r\n        <span className=\"day-temp\">{weather}°C</span>\r\n\r\n        <button className=\"location-button\" onClick={remove}>\r\n          <span>Delete</span>\r\n        </button>\r\n      </Link>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport SavedCity from \"./SavedCity\";\r\n\r\nexport default function Favorites() {\r\n  const favorites = useSelector((state) => state.favorites);\r\n\r\n  return (\r\n    <div className={\"week-container\"}>\r\n      <ul className=\"week-list\">\r\n        {favorites?.map((savedCity, i) => (\r\n          <SavedCity key={`city-${i}`} city={savedCity} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Home from \"./components/Home\";\nimport Favorites from \"./components/Favorites\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCityWeather, getCityForecast } from \"./utils\";\nimport { setForecast, setWeather, setError } from \"./actions\";\nimport { BrowserRouter, Route, Switch, NavLink } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  //states\n  const city = useSelector((state) => state.city);\n  const errorExisting = useSelector((state) => state.errorExisting);\n  const notify = () =>\n    toast(\"Sorry, there seem to be a problem with our server \");\n\n  useEffect(() => {\n    if (errorExisting) notify();\n  }, [errorExisting]);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    getCityForecast(city.key)\n      .then((forecast) =>\n        dispatch(setForecast({ cityKey: city.key, forecast }))\n      )\n      .catch((err) => dispatch(setError(err)));\n    getCityWeather(city.key)\n      .then((degrees) => dispatch(setWeather({ cityKey: city.key, degrees })))\n      .catch((err) => dispatch(setError(err)));\n  }, [city]);\n\n  return (\n    <BrowserRouter>\n      <div className=\"navbar\">\n        <NavLink exact to=\"/\">\n          <button className=\"location-button\">\n            <span>Home</span>\n          </button>\n        </NavLink>\n        <NavLink exact to=\"/favorites\">\n          <button className=\"location-button\">\n            <span>Favorites</span>\n          </button>\n        </NavLink>\n      </div>\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/favorites\">\n            <Favorites />\n          </Route>\n        </Switch>\n        <ToastContainer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const cityReducer = (\r\n  state = { label: \"Tel Aviv / Israel\", key: 215854 },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_CITY\":\r\n      return action.payload;\r\n    case \"ADD_DATA\":\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default cityReducer;\r\n","const favoritesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TO_FAVORITES\":\r\n      return [...state, action.payload];\r\n    case \"REMOVE_FROM_FAVORITES\":\r\n      return state.filter((item) => action.payload !== item.key);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default favoritesReducer;\r\n","const forecastReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_FORECAST\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default forecastReducer;\r\n","const weatherReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"SET_WEATHER\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default weatherReducer;\r\n","const errorReducer = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ERROR\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default errorReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cityReducer from \"./cityReducer\";\r\nimport favoritesReducer from \"./favoritesReducer\";\r\nimport forecastReducer from \"./forecastReducer\";\r\nimport weatherReducer from \"./weatherReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  city: cityReducer,\r\n  favorites: favoritesReducer,\r\n  weather: weatherReducer,\r\n  forecast: forecastReducer,\r\n  errorExisting: errorReducer,\r\n});\r\nexport default rootReducer;\r\n","import thunk from \"redux-thunk\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}